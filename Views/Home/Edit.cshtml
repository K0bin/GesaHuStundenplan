@{
    ViewData["Title"] = "Bearbeiten";
}

@using StundenplanImport.Model.GesaHu;
@using StundenplanImport.Model;

@model StundenplanImport.Model.ViewModel.EditViewModel

<form asp-controller="Home" asp-action="ExportIcf" method="post">
    <table class="table table-bordered timetable">
        <thead>
            <tr>
                <th></th>
                <th>Montag</th>
                <th>Dienstag</th>
                <th>Mittwoch</th>
                <th>Donnerstag</th>
                <th>Freitag</th>
            </tr>
        </thead>
        <tbody>
            @{
                int lessonCount = 0;
                for (int lessonRow = 0; lessonRow < 10; lessonRow++)
                {
                    <tr>
                        <td>@(lessonRow + 1)</td>
                        @for (int dayColumn = 0; dayColumn < 5; dayColumn++)
                        {
                            bool hasLesson = false;
                            foreach (var lesson in Model.Lessons)
                            {
                                var dayOfWeek = (DayOfWeek)((int)DayOfWeek.Monday + dayColumn);
                                if (lesson.Day == dayOfWeek && lesson.Number == lessonRow)
                                {
                                    <td rowspan="@lesson.Duration.ToString()" id="cell-@(lessonCount)">
                                        <a id="" href="javascript:void(0)" onclick="onLessonRemoved(@(lessonCount));"><span class="glyphicon glyphicon-remove" aria-hidden="true"></span></a>

                                        <span class="subject">@((lesson.Classes.Count == 1) ? lesson.Classes[0].Name : lesson.Name)<br />@((lesson.Classes.Count == 1) ? lesson.Classes[0].Teacher : lesson.TeacherOrSchoolClass)</span>
                                        @if (lesson.Classes.Count > 1)
                                        {
                                            <select id="select-@(lessonCount)" class="selectpicker" onchange="onLessonClassSelected(@(lessonCount));">
                                                @foreach (var _class in lesson.Classes)
                                                {
                                                    <option value="@_class.ShortName-@_class.ShortTeacher-@_class.Room">@_class.Name @_class.Teacher @_class.Room</option>
                                                }
                                            </select>
                                        }
                                        <input name="lessons[@(lessonCount)].Day" type="hidden" value="@lesson.Day" />
                                        <input name="lessons[@(lessonCount)].Number" type="hidden" value="@lesson.Number" />
                                        <input name="lessons[@(lessonCount)].Duration" type="hidden" value="@lesson.Duration" />
                                        <input name="lessons[@(lessonCount)].Name" type="hidden" value="@lesson.Name" id="name-@(lessonCount)" />
                                        <input name="lessons[@(lessonCount)].TeacherOrSchoolClass" type="hidden" value="@lesson.TeacherOrSchoolClass" id="teacher-@(lessonCount)" />
                                        <input name="lessons[@(lessonCount)].Room" type="hidden" value="@(lesson.Classes.Count > 0 ? lesson.Classes[0].Room : string.Empty)" id="room-@(lessonCount)" />
                                    </td>

                                    lessonCount++;
                                    hasLesson = true;
                                }
                                else if (lesson.Day == dayOfWeek && lesson.Number == lessonRow - 1 && lesson.Duration > 1)
                                {
                                    hasLesson = true;
                                }
                            }

                            if (!hasLesson)
                            {
                                <td></td>
                            }
                        }
                    </tr>
                    }
                }
        </tbody>
    </table>

    <input name="timetableName" type="hidden" value="@Model.Element" />
    <input type="submit" />

</form>
